set executable = test

set cc  = gcc
set cxx = g++
set ld  = gcc

set cflags = -Werror -Wall
set cxxflags = -Wall -fno-rtti -std=c++17 -Wno-invalid-offsetof -Wno-parentheses -fno-exceptions
set ldflags = -lm -lSDL2

flag debug
	set cflags = {cflags} -g -D DEBUG
	set cxxflags = {cxxflags} -g -D DEBUG

flag not debug
	set cflags = {cflags} -O2
	set cxxflags = {cxxflags} -O2
	set ldflags = {ldflags} -O2

set cc  = {cc} {cflags} -I ../../
set cxx = {cxx} {cxxflags} -I ../../
set ld  = {ld}

each test in {foo/bar.*} {baz/*.foo}

each source in {**/*.cpp} {../../common/**/*.cpp}
	task build-objects
		provides {source}.o
		requires {source}
		requires {../../common/**/*.hpp} {../../common/**/*.h} {../../common/**/*.inl}
		run echo build {source.file}
		run {cxx} -c {source} -o {source}.o

each source in {**/*.c} {../../common/**/*.c}
	task build-objects
		provides {source}.o
		requires {source}
		requires {../../common/**/*.h} {../../common/**/*.inl}
		run echo build {source.file}
		run {cc} -c {source} -o {source}.o

task build
	provides {executable}
	requires task build-objects
	requires {**/*.cpp as *.cpp.o} {**/*.c as *.c.o} {../../common/**/*.cpp as *.cpp.o} {../../common/**/*.c as *.c.o}
	run {ld} -o {executable} {**/*.cpp as *.cpp.o} {**/*.c as *.c.o} {../../common/**/*.cpp as *.cpp.o} {../../common/**/*.c as *.c.o} {ldflags}

task clean
	optional run rm -rf ../build
	each object in {**/*.o} {../../common/**/*.o}
		run rm {object}

task test
	requires task build
	run ./{executable}
